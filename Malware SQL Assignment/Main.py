import sys
import os

out = sys.stdout

def main(args):
    #check that a command line argument has been passed
    if (len(args) > 1):
        out.write('Directory of input files appears to have been provided via Command Line Argument\n')
        directory = args[1]
        
    else:
        out.write('No manual input directory specified, attempting to use current directory \n')
        directory = os.getcwd()
 
    validFiles = sanity_check(directory)

    if (len(validFiles) > 0):
        for index, value in enumerate(validFiles):
            print "Input file #" + str(index) + ": " + value

        if (query_yes_no("Okay to parse listed files?")):
            for file in validFiles:
                parse_filecontents(file)

        else:
            print "Exiting.."
    else:
        print "Exiting.."

        
def sanity_check(results_dir):
    validFiles = []

    print "Checking: " + results_dir
    if (os.path.exists(results_dir) and os.path.isdir(results_dir)):
        numberOfValidFiles = len([each for each in os.listdir(results_dir) if each.endswith('.sql') or each.endswith('.txt')])
        if (numberOfValidFiles <1):
            print "There must be at least 1 .txt or .sql file in either the current directory or manually specified directory. This script can not find any at" + results_dir
            return validFiles;
        else:
            print str(numberOfValidFiles) + " valid input files found\n"
            for files in os.listdir(results_dir):
                if(files.endswith('.txt') or files.endswith('.sql')):
                    validFiles.append(files)
            return validFiles;
    else:
        print "Invalid results directory specified"
        return validFiles;

def parse_filecontents(filename):
    f = open(filename)
    readlines = f.readlines()
    out.write(readlines[0])

def query_yes_no(question, default="yes"):

    validAnswers = {"yes": True, "y": True, "ye": True,
             "no": False, "n": False}
    if default is None:
        prompt = " [y/n] "
    elif default == "yes":
        prompt = " [Y/n] "
    elif default == "no":
        prompt = " [y/N] "
    else:
        raise ValueError("invalid default answer: '%s'" % default)

    while True:
        sys.stdout.write(question + prompt)
        choice = raw_input().lower()
        if default is not None and choice == '':
            return validAnswers[default]
        elif choice in validAnswers:
            return validAnswers[choice]
        else:
            sys.stdout.write("Please respond with 'yes' or 'no' "
                             "(or 'y' or 'n').\n")

if __name__ == "__main__":
    main(sys.argv)